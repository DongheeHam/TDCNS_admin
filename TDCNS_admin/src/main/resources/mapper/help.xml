<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="clabs.srv.mapper.GspMapper">
	
	<!-- <select id="getServiceKey" parameterType="java.util.HashMap" resultType="keyMap">
    	select * from SP_LIST where SERVICE_KEY=#{SERVICE_KEY}
    </select>
    <select id="getCurrentKeys" parameterType="java.util.HashMap" resultType="keyMap">
    	select ENCRYPT_KEY,COOKIE_KEY from CURRENT_KEYS order by VERSION desc limit 1
    </select>
	<insert id="insertNewKeys" parameterType="java.util.HashMap" >
    	insert into CURRENT_KEYS (ENCRYPT_KEY,COOKIE_KEY) values 
    	(#{ENCRYPT_KEY},#{COOKIE_KEY}) 
    </insert> -->
    <select id="getClasses" parameterType="java.util.HashMap" resultType="keyMap">
    	select CNO,LEVEL,NAME from CLASS where SNO=#{sno}
    </select>
    <select id="getLevels" parameterType="java.util.HashMap" resultType="keyMap">
    	select distinct LEVEL from class where SNO=#{sno}
    </select>
    <select id="getUserByClass" parameterType="java.util.HashMap" resultType="keyMap">
    	select aa.*,bb.LEVEL,bb.NAME CNAME from 
    	(select a.CNO,b.* from CLASS_MATCH a left join MEMBER b on a.UNO=b.UNO where CNO=#{cno}) aa 
    	left join CLASS bb on aa.CNO=bb.CNO
    </select>
     <select id="getClassInfo" parameterType="java.util.HashMap" resultType="keyMap">
    	select * from CLASS where CNO=#{cno}
    </select>
     <select id="getUserAdmin" parameterType="java.util.HashMap" resultType="keyMap">
    	select IFNULL(b.type,'') type from MEMBER a left join ADMIN_MEMBER b on a.UNO=b.UNO where a.UNO=#{uno}
    </select>
     <select id="getSearchCount" parameterType="java.util.HashMap" resultType="keyMap">
    	select count(*) as count from MEMBER where SNO=#{sno} and ${what} like  '%${search}%'
    </select>
    <select id="getUserCount" parameterType="java.util.HashMap" resultType="keyMap">
    	select count(*) as count from MEMBER where SNO=#{sno}
    </select>
    <select id="getPageUser" parameterType="java.util.HashMap" resultType="keyMap">
    	select a.*,b.TYPE ADMIN from MEMBER a left join ADMIN_MEMBER b 
    	on a.UNO=b.UNO where a.SNO=#{sno} order by NAME limit 10 offset #{currentPage}
    </select>
    <select id="getSearchUsers" parameterType="java.util.HashMap" resultType="keyMap">
    	<![CDATA[
    	select a.*,b.TYPE ADMIN from MEMBER a left join ADMIN_MEMBER b on a.UNO=b.UNO 
    	where a.SNO=#{sno} && ${what} like '%${search}%'
    	order by NAME limit 10 offset #{currentPage}
    	]]>
    </select>
    <select id="getUserAttr" parameterType="java.util.HashMap" resultType="keyMap">
    	select aa.*,bb.TYPE admin from (select a.*,b.EMAIL,b.PHONE,b.ADDR,b.BIRTH from MEMBER a left join ATTRIBUTE_MEMBER b on a.UNO=b.UNO where a.UNO=#{uno}) aa left join ADMIN_MEMBER bb on aa.UNO=bb.UNO
    </select>
    <select id="getLoginUser" parameterType="java.util.HashMap" resultType="keyMap">
    	select a.UNO,a.SNO,a.UTYPE,a.NAME,b.SNAME,b.STYPE from MEMBER a left join SCHOOL b on a.SNO=b.SNO where UNO=#{uno}
    </select>
    <select id="getEmail" parameterType="java.util.HashMap" resultType="keyMap">
    	select EMAIL from MEMBER where UNO=#{uno}
    </select>
    <select id="getCode" parameterType="java.util.HashMap" resultType="keyMap">
    	select CODE from CODE where UNO=#{uno} order by NUM desc limit 1
    </select>
    <select id="getSerachSchoolCount" parameterType="java.util.HashMap" resultType="keyMap">
    	select count(*) count from school where ${what} like  '%${search}%'
    </select>
    <select id="getSchoolCount" parameterType="java.util.HashMap" resultType="keyMap">
    	select count(*) count from school
    </select>
    <select id="getSearchSchools" parameterType="java.util.HashMap" resultType="keyMap">
    	select * from SCHOOL where ${what} like '%${search}%' order by SNAME limit 10 offset #{currentPage}
    </select>
    <select id="getAllSchools" parameterType="java.util.HashMap" resultType="keyMap">
    	select * from SCHOOL order by SNAME limit 10 offset #{currentPage} 
    </select>
    
    <select id="getMoreCnt" parameterType="java.util.HashMap" resultType="keyMap">
    	select (select count(*) from CLASS where SNO=#{sno}) classCnt, 
    	(select count(*) from ADMIN_MEMBER where SNO=#{sno} and TYPE='super') superAdm,
    	(select count(*) from ADMIN_MEMBER where SNO=#{sno} and TYPE='school') schoolAdm 
    </select>
    <select id="getMemberCnt" parameterType="java.util.HashMap" resultType="keyMap">
    	 select UTYPE,count(*) count from MEMBER where sno=#{sno} group by UTYPE
    </select>
    <select id="getSchool" parameterType="java.util.HashMap" resultType="keyMap">
    	 select * from SCHOOL where SNO=#{sno}
    </select>
    
    
    <insert id="insertSchool" parameterType="java.util.HashMap"> 
		insert into SCHOOL values (#{sno},#{stype},#{sname})
	</insert>
	<insert id="insertClass" parameterType="java.util.HashMap"> 
		insert into CLASS values (#{cno},#{sno},#{level},#{name})
	</insert>
	<insert id="insertMember" parameterType="java.util.Map"> 
		insert into MEMBER (UNO,UTYPE,SNO,NAME,
		<if test="dept != null">
		  		DEPT,POS
		</if>
		) values (#{uno},#{utype},#{sno},#{name},
		<if test="dept != null">
		  		#{dept},#{pos}
		</if>
		)
	</insert>
	<update id="updateMember" parameterType="java.util.HashMap"> 
		update MEMBER set UNO=#{uno},
		NAME=#{name},
		EMAIL=#{email},
		<if test="dept != null">
		DEPT=#{dept},
		</if>
		ADMIN=#{admin} 
		where UNO=#{uno}
	</update>
	<insert id="insertAdmin" parameterType="java.util.HashMap"> 
		insert into ADMIN_MEMBER values (#{type},#{uno},#{sno})
	</insert>
	<delete id="deleteAdmin" parameterType="java.util.HashMap">delete from ADMIN_MEMBER where UNO=#{uno}</delete>
	<delete id="deleteUser" parameterType="java.util.HashMap">delete from MEMBER where UNO=#{uno}</delete>
</mapper>